clc, clear
A = [1 30 20.8 5.1 20 10; 
    1 30 20.8 5.1 10 20;
    1 20 20.8 5.1 20 10; 
    1 30 30 5.1 20 20;
    1 30 20.8 6 20 10;
    1 30 20.8 5.1 20 20;
    1 27 21 5.8 9 11;
    1 35 22 5.9 17 20;
    1 45 23 6.0 23 19;
    1 64 22 5.9 27 8;
    1 73 25 5.8 23 10;
    1 53 21 5.4 29 2];

% X = [x1; x2; x3; x4; x5; x6;];
B = [3533; 5433; 3883; 4453; 2750; 9000; 4020; 6090; 5007; 3908; 3444; 1200];
X = inv(((A' * A) + eps*eye(6)))*(A'*B);


A_2 = [1 30 432.64 5.1 20 10; 
    1 30 432.64 5.1 10 20;
    1 20 432.64 5.1 20 10; 
    1 30 900 5.1 20 20;
    1 30 432.64 6 20 10;
    1 30 432.64 5.1 20 20;
    1 27 441 5.8 9 11;
    1 35 484 5.9 17 20;
    1 45 529 6.0 23 19;
    1 64 484 5.9 27 8;
    1 73 625 5.8 23 10';
    1 53 441 5.4 29 2];

X_2 = inv(((A_2' * A_2) + eps*eye(6)))*(A_2'*B); 

d_1 = X_2(1) + (X_2(2)*A_2(1,2)) + (X_2(3)*A_2(1,3) + ...
    (X_2(4)*A_2(1,4))) + (X_2(5)*A_2(1,5)) + (X_2(6)*A_2(1,6)); % Dose per person

d_2 = X_2(1) + (X_2(2)*A_2(2,2)) + (X_2(3)*A_2(2,3) + ...
    (X_2(4)*A_2(2,4))) + (X_2(5)*A_2(2,5)) + (X_2(6)*A_2(2,6));

d_3 = X_2(1) + (X_2(2)*A_2(3,2)) + (X_2(3)*A_2(3,3) + ...
    (X_2(4)*A_2(3,4))) + (X_2(5)*A_2(3,5)) + (X_2(6)*A_2(3,6));

d_4 = X_2(1) + (X_2(2)*A_2(4,2)) + (X_2(3)*A_2(4,3) + ...
    (X_2(4)*A_2(4,4))) + (X_2(5)*A_2(4,5)) + (X_2(6)*A_2(4,6));

d_5 = X_2(1) + (X_2(2)*A_2(5,2)) + (X_2(3)*A_2(5,3) + ...
    (X_2(4)*A_2(5,4))) + (X_2(5)*A_2(5,5)) + (X_2(6)*A_2(5,6));

d_6 = X_2(1) + (X_2(2)*A_2(6,2)) + (X_2(3)*A_2(6,3) + ...
    (X_2(4)*A_2(6,4))) + (X_2(5)*A_2(6,5)) + (X_2(6)*A_2(6,6));

d_7 = X_2(1) + (X_2(2)*A_2(7,2)) + (X_2(3)*A_2(7,3) + ...
    (X_2(4)*A_2(7,4))) + (X_2(5)*A_2(7,5)) + (X_2(6)*A_2(7,6)); 

d_8 = X_2(1) + (X_2(2)*A_2(8,2)) + (X_2(3)*A_2(8,3) + ...
    (X_2(4)*A_2(8,4))) + (X_2(5)*A_2(8,5)) + (X_2(6)*A_2(8,6));

d_9 = X_2(1) + (X_2(2)*A_2(9,2)) + (X_2(3)*A_2(9,3) + ...
    (X_2(4)*A_2(9,4))) + (X_2(5)*A_2(9,5)) + (X_2(6)*A_2(9,6));

d_10 = X_2(1) + (X_2(2)*A_2(10,2)) + (X_2(3)*A_2(10,3) + ...
    (X_2(4)*A_2(10,4))) + (X_2(5)*A_2(10,5)) + (X_2(6)*A_2(10,6));

d_11 = X_2(1) + (X_2(2)*A_2(11,2)) + (X_2(3)*A_2(11,3) + ...
    (X_2(4)*A_2(11,4))) + (X_2(5)*A_2(11,5)) + (X_2(6)*A_2(11,6));

d_12 = X_2(1) + (X_2(2)*A_2(12,2)) + (X_2(3)*A_2(12,3) + ...
    (X_2(4)*A_2(12,4))) + (X_2(5)*A_2(12,5)) + (X_2(6)*A_2(12,6));


D = [d_1; d_2; d_3; d_4; d_5; d_6; d_7; d_8; d_9; d_10; d_11; d_12];

Errors_D = [(d_1 - B(1))^2 ; (d_2 - B(2))^2; (d_3 - B(3))^2;
    (d_4 - B(4))^2; (d_5 - B(5))^2; (d_6 - B(6))^2; (d_7 - B(7))^2;
    (d_8 - B(8))^2; (d_9 - B(9))^2; (d_10 - B(10))^2; (d_11 - B(11))^2;
    (d_12 - B(12))^2;];


len_Errors = length(Errors_D);
Sorted_Errors = sort(Errors_D);
if rem(len_Errors, 2) == 0
    middle_Error_1 = Sorted_Errors(len_Errors/2);
    middle_Error_2 = Sorted_Errors(len_Errors/2 + 1);
    middle_Values = sqrt(mean([middle_Error_1, middle_Error_2]));
else
    middle_index = (len_Errors + 1) / 2;
    middle_value = Sorted_Errors(middle_index);
    middle_Values = sqrt(middle_value);
end
Mean_Error_Value_D = sqrt(mean(Errors_D))
Median_Error_Value_D = sqrt(median(Errors_D))

disp("Middle error is: " +middle_Values)

A_21 = [1 30 20.8 26.01 20 10; 
    1 30 20.8 26.01 10 20;
    1 20 20.8 26.01 20 10; 
    1 30 30 26.01 20 20;
    1 30 20.8 36 20 10;
    1 30 20.8 26.01 20 20;
    1 27 21 33.64 9 11;
    1 35 22 34.81 17 20;
    1 45 23 36 23 19;
    1 64 22 34.81 27 8;
    1 73 25 33.64 23 10';
    1 53 21 29.16 29 2];

X_21 = inv(((A_21' * A_21) + eps*eye(6)))*(A_21'*B); 

d_11 = X_21(1) + (X_21(2)*A_21(1,2)) + (X_21(3)*A_21(1,3) + ...
    (X_21(4)*A_21(1,4))) + (X_21(5)*A_21(1,5)) + (X_21(6)*A_21(1,6)); % Dose per person

d_21 = X_21(1) + (X_21(2)*A_21(2,2)) + (X_21(3)*A_21(2,3) + ...
    (X_21(4)*A_21(2,4))) + (X_21(5)*A_21(2,5)) + (X_21(6)*A_21(2,6));

d_31 = x_21(1) + (x_21(2)*A_21(3,2)) + (x_21(3)*A_21(3,3) + ...
    (x_21(4)*A_21(3,4))) + (x_21(5)*A_21(3,5)) + (x_21(6)*A_21(3,6));

d_41 = x_21(1) + (x_21(2)*A_21(4,2)) + (x_21(3)*A_21(4,3) + ...
    (x_21(4)*A_21(4,4))) + (x_21(5)*A_21(4,5)) + (x_21(6)*A_21(4,6));

d_51 = x_21(1) + (x_21(2)*A_21(5,2)) + (x_21(3)*A_21(5,3) + ...
    (x_21(4)*A_21(5,4))) + (x_21(5)*A_21(5,5)) + (x_21(6)*A_21(5,6));

d_61 = x_21(1) + (x_21(2)*A_21(6,2)) + (x_21(3)*A_21(6,3) + ...
    (x_21(4)*A_21(6,4))) + (x_21(5)*A_21(6,5)) + (x_21(6)*A_21(6,6));

d_71 = x_21(1) + (x_21(2)*A_21(7,2)) + (x_21(3)*A_21(7,3) + ...
    (x_21(4)*A_21(7,4))) + (x_21(5)*A_21(7,5)) + (x_21(6)*A_21(7,6)); 

d_81 = x_21(1) + (x_21(2)*A_21(8,2)) + (x_21(3)*A_21(8,3) + ...
    (x_21(4)*A_21(8,4))) + (x_21(5)*A_21(8,5)) + (x_21(6)*A_21(8,6));

d_91 = x_21(1) + (x_21(2)*A_21(9,2)) + (x_21(3)*A_21(9,3) + ...
    (x_21(4)*A_21(9,4))) + (x_21(5)*A_21(9,5)) + (x_21(6)*A_21(9,6));

d_101 = x_21(1) + (x_21(2)*A_21(10,2)) + (x_21(3)*A_21(10,3) + ...
    (x_21(4)*A_21(10,4))) + (x_21(5)*A_21(10,5)) + (x_21(6)*A_21(10,6));

d_111 = x_21(1) + (x_21(2)*A_21(11,2)) + (x_21(3)*A_21(11,3) + ...
    (x_21(4)*A_21(11,4))) + (x_21(5)*A_21(11,5)) + (x_21(6)*A_21(11,6));

d_121 = x_21(1) + (x_21(2)*A_21(12,2)) + (x_21(3)*A_21(12,3) + ...
    (x_21(4)*A_21(12,4))) + (x_21(5)*A_21(12,5)) + (x_21(6)*A_21(12,6));


D_1 = [d_11; d_21; d_31; d_41; d_51; d_61; d_71; d_81; d_91; d_101; d_111; d_121];

Errors_D_1 = [(d_11 - B(1))^2 ; (d_21 - B(2))^2; (d_31 - B(3))^2;
    (d_41 - B(4))^2; (d_51 - B(5))^2; (d_61 - B(6))^2; (d_71 - B(7))^2;
    (d_81 - B(8))^2; (d_91 - B(9))^2; (d_101 - B(10))^2; (d_111 - B(11))^2;
    (d_121 - B(12))^2;];

len_Errors = length(Errors_D_1);
Sorted_Errors = sort(Errors_D_1);
if rem(len_Errors, 2) == 0
    middle_Error_1 = Sorted_Errors(len_Errors/2);
    middle_Error_2 = Sorted_Errors(len_Errors/2 + 1);
    middle_Values = sqrt(mean([middle_Error_1, middle_Error_2]));
else
    middle_index = (len_Errors + 1) / 2;
    middle_value = Sorted_Errors(middle_index);
    middle_Values = sqrt(middle_value);
end
Mean_Error_Value_D = sqrt(mean(Errors_D_1))
Median_Error_Value_D = sqrt(median(Errors_D_1))

disp("Middle error is: " +middle_Values)


A_22 = [1 30 20.8 5.1 400 10; 
    1 30 20.8 5.1 100 20;
    1 20 20.8 .1 400 10; 
    1 30 30 5.1 400 20;
    1 30 20.8 6 400 10;
    1 30 20.8 5.1 400 20;
    1 27 21 5.8 81 11;
    1 35 22 5.9 289 20;
    1 45 23 6.0 529 19;
    1 64 22 5.9 729 8;
    1 73 25 5.8 529 10';
    1 53 21 5.4 841 2];

x_22 = inv(((A_22' * A_22) + eps*eye(6)))*(A_22'*B); 

d_12 = x_22(1) + (x_22(2)*A_22(1,2)) + (x_22(3)*A_22(1,3) + ...
    (x_22(4)*A_22(1,4))) + (x_22(5)*A_22(1,5)) + (x_22(6)*A_22(1,6)); % Dose per person

d_22 = x_22(1) + (x_22(2)*A_22(2,2)) + (x_22(3)*A_22(2,3) + ...
    (x_22(4)*A_22(2,4))) + (x_22(5)*A_22(2,5)) + (x_22(6)*A_22(2,6));

d_32 = x_22(1) + (x_22(2)*A_22(3,2)) + (x_22(3)*A_22(3,3) + ...
    (x_22(4)*A_22(3,4))) + (x_22(5)*A_22(3,5)) + (x_22(6)*A_22(3,6));

d_42 = x_22(1) + (x_22(2)*A_22(4,2)) + (x_22(3)*A_22(4,3) + ...
    (x_22(4)*A_22(4,4))) + (x_22(5)*A_22(4,5)) + (x_22(6)*A_22(4,6));

d_52 = x_22(1) + (x_22(2)*A_22(5,2)) + (x_22(3)*A_22(5,3) + ...
    (x_22(4)*A_22(5,4))) + (x_22(5)*A_22(5,5)) + (x_22(6)*A_22(5,6));

d_62 = x_22(1) + (x_22(2)*A_22(6,2)) + (x_22(3)*A_22(6,3) + ...
    (x_22(4)*A_22(6,4))) + (x_22(5)*A_22(6,5)) + (x_22(6)*A_22(6,6));

d_72 = x_22(1) + (x_22(2)*A_22(7,2)) + (x_22(3)*A_22(7,3) + ...
    (x_22(4)*A_22(7,4))) + (x_22(5)*A_22(7,5)) + (x_22(6)*A_22(7,6)); 

d_82 = x_22(1) + (x_22(2)*A_22(8,2)) + (x_22(3)*A_22(8,3) + ...
    (x_22(4)*A_22(8,4))) + (x_22(5)*A_22(8,5)) + (x_22(6)*A_22(8,6));

d_92 = x_22(1) + (x_22(2)*A_22(9,2)) + (x_22(3)*A_22(9,3) + ...
    (x_22(4)*A_22(9,4))) + (x_22(5)*A_22(9,5)) + (x_22(6)*A_22(9,6));

d_102 = x_22(1) + (x_22(2)*A_22(10,2)) + (x_22(3)*A_22(10,3) + ...
    (x_22(4)*A_22(10,4))) + (x_22(5)*A_22(10,5)) + (x_22(6)*A_22(10,6));

d_112 = x_22(1) + (x_22(2)*A_22(11,2)) + (x_22(3)*A_22(11,3) + ...
    (x_22(4)*A_22(11,4))) + (x_22(5)*A_22(11,5)) + (x_22(6)*A_22(11,6));

d_122 = x_22(1) + (x_22(2)*A_22(12,2)) + (x_22(3)*A_22(12,3) + ...
    (x_22(4)*A_22(12,4))) + (x_22(5)*A_22(12,5)) + (x_22(6)*A_22(12,6));


D_2 = [d_12; d_22; d_32; d_42; d_52; d_62; d_72; d_82; d_92; d_102; d_112; d_122];

Errors_D_2 = [(d_12 - B(1))^2 ; (d_22 - B(2))^2; (d_32 - B(3))^2;
    (d_42 - B(4))^2; (d_52 - B(5))^2; (d_62 - B(6))^2; (d_72 - B(7))^2;
    (d_82 - B(8))^2; (d_92 - B(9))^2; (d_102 - B(10))^2; (d_112 - B(11))^2;
    (d_122 - B(12))^2;];


len_Errors = length(Errors_D_2);
Sorted_Errors = sort(Errors_D_2);
if rem(len_Errors, 2) == 0
    middle_Error_1 = Sorted_Errors(len_Errors/2);
    middle_Error_2 = Sorted_Errors(len_Errors/2 + 1);
    middle_Values = sqrt(mean([middle_Error_1, middle_Error_2]));
else
    middle_index = (len_Errors + 1) / 2;
    middle_value = Sorted_Errors(middle_index);
    middle_Values = sqrt(middle_value);
end
Mean_Error_Value_D = sqrt(mean(Errors_D_2))
Median_Error_Value_D = sqrt(median(Errors_D_2))

disp("Middle error is: " +middle_Values)


A_3 = [1 30 432.64 5.1 20 10; 
    1 30 432.64 5.1 10 20;
    1 20 432.64 .1 20 10; 
    1 30 900 5.1 20 20;
    1 30 432.64 6 20 10;
    1 30 432.64 5.1 20 20;
    1 27 441 5.8 9 11;
    1 35 484 5.9 17 20;
    1 45 529 6.0 23 19;
    1 64 484 5.9 27 8;
    1 73 625 5.8 23 10;
    1 53 441 5.4 29 2;
    1 80 456 5.2 30 20;
    1 60 654 5.1 10 20];

B_3 = [3533; 5433; 3883; 4453; 2750; 9000; 4020; 6090; 5007; 3908; 3444; 1200; 50100; 25000];

X_3 = (((A_3' * A_3) + eps*eye(6)))*(A_3'*B_3); 

dn_1 = X_3(1) + (x_3(2)*A_3(1,2)) + (x_3(3)*A_3(1,3) + ...
    (X_3(4)*A_3(1,4))) + (X_3(5)*A_3(1,5)) + (X_3(6)*A_3(1,6)); % Dose per person

dn_2 = X_3(1) + (X_3(2)*A_3(2,2)) + (X_3(3)*A_3(2,3) + ...
    (X_3(4)*A_3(2,4))) + (X_3(5)*A_3(2,5)) + (X_3(6)*A_3(2,6));

dn_3 = X_3(1) + (X_3(2)*A_3(3,2)) + (X_3(3)*A_3(3,3) + ...
    (X_3(4)*A_3(3,4))) + (X_3(5)*A_3(3,5)) + (X_3(6)*A_3(3,6));

dn_4 = X_3(1) + (X_3(2)*A_3(4,2)) + (X_3(3)*A_3(4,3) + ...
    (X_3(4)*A_3(4,4))) + (X_3(5)*A_3(4,5)) + (X_3(6)*A_3(4,6));

dn_5 = X_3(1) + (X_3(2)*A_3(5,2)) + (X_3(3)*A_3(5,3) + ...
    (X_3(4)*A_3(5,4))) + (X_3(5)*A_3(5,5)) + (X_3(6)*A_3(5,6));

dn_6 = X_3(1) + (X_3(2)*A_3(6,2)) + (X_3(3)*A_3(6,3) + ...
    (X_3(4)*A_3(6,4))) + (X_3(5)*A_3(6,5)) + (X_3(6)*A_3(6,6));

dn_7 = X_3(1) + (X_3(2)*A_3(7,2)) + (X_3(3)*A_3(7,3) + ...
    (X_3(4)*A_3(7,4))) + (X_3(5)*A_3(7,5)) + (X_3(6)*A_3(7,6)); 

dn_8 = X_3(1) + (X_3(2)*A_3(8,2)) + (X_3(3)*A_3(8,3) + ...
    (X_3(4)*A_3(8,4))) + (X_3(5)*A_3(8,5)) + (X_3(6)*A_3(8,6));

dn_9 = X_3(1) + (X_3(2)*A_3(9,2)) + (X_3(3)*A_3(9,3) + ...
    (X_3(4)*A_3(9,4))) + (X_3(5)*A_3(9,5)) + (X_3(6)*A_3(9,6));

dn_10 = X_3(1) + (X_3(2)*A_3(10,2)) + (X_3(3)*A_3(10,3) + ...
    (X_3(4)*A_3(10,4))) + (X_3(5)*A_3(10,5)) + (X_3(6)*A_3(10,6));

dn_11 = X_3(1) + (X_3(2)*A_3(11,2)) + (X_3(3)*A_3(11,3) + ...
    (X_3(4)*A_3(11,4))) + (X_3(5)*A_3(11,5)) + (X_3(6)*A_3(11,6));

dn_12 = X_3(1) + (X_3(2)*A_3(12,2)) + (X_3(3)*A_3(12,3) + ...
    (X_3(4)*A_3(12,4))) + (X_3(5)*A_3(12,5)) + (X_3(6)*A_3(12,6));

D_n = [dn_1; dn_2; dn_3; dn_4; dn_5; dn_6; dn_7; dn_8; dn_9; dn_10; dn_11; dn_12];

Errors_D_n = [(dn_1 - B_3(1))^2 ; (dn_2 - B_3(2))^2; (dn_3 - B_3(3))^2;
    (dn_4 - B_3(4))^2; (dn_5 - B_3(5))^2; (dn_6 - B_3(6))^2; (dn_7 - B_3(7))^2;
    (dn_8 - B_3(8))^2; (dn_9 - B_3(9))^2; (dn_10 - B_3(10))^2; (dn_11 - B_3(11))^2;
    (dn_12 - B_3(12))^2;];


len_Errors = length(Errors_D_n);
Sorted_Errors = sort(Errors_D_n);
if rem(len_Errors, 2) == 0
    middle_Error_1 = Sorted_Errors(len_Errors/2);
    middle_Error_2 = Sorted_Errors(len_Errors/2 + 1);
    middle_Values = sqrt(mean([middle_Error_1, middle_Error_2]));
else
    middle_index = (len_Errors + 1) / 2;
    middle_value = Sorted_Errors(middle_index);
    middle_Values = sqrt(middle_value);
end
Mean_Error_Value_D_n = sqrt(mean(Errors_D_n))
Median_Error_Value_D_n = sqrt(median(Errors_D_n))

disp("Middle error is: " +middle_Values)